{{- if .Values.xpack.enabled }}
{{- $pvcFullName := printf "%s-%s" (include "hummerrisk.name" $) "data" }}
{{- $fullName := include "hummerrisk.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    owner: hummercloud-{{ .Release.Namespace }}
  labels:
    app: hummerrisk-scanner
  name: hummerrisk-scanner
  namespace: {{ .Release.Namespace | quote }}
spec:
  replicas: {{ .Values.hummerrisk.replicas }}
  selector:
    matchLabels:
      app: hummerrisk-scanner
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: hummerrisk-scanner
    spec:
      initContainers:
        - name: wait-for-system-license
          image: "{{ .Values.global.imageRegistry }}/hummerrisk/hmr-system:{{ .Values.hummerrisk.image.tag }}"
          imagePullPolicy: {{ .Values.hummerrisk.image.pullPolicy }}
          command: [ 'sh','-c' ]
          args:
            - /bin/sh
            - -c
            - >
              set -x;
              while [[ "$(curl http://hummerrisk-system:9300/license)" =~ "true" ]]; do
                echo 'checking license ...'
                sleep 15;
              done
      #tolerations:
        #- effect: NoSchedule
        #  key: node-role.kubernetes.io/master
      containers:
      - name: hummerrisk-scanner
        image: "{{ .Values.global.imageRegistry }}/hummerrisk/hmr-scanner:{{ .Values.hummerrisk.image.tag }}"
        #imagePullPolicy: IfNotPresent
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        {{- if .Values.resources }}
        resources: {{- toYaml .Values.resources | nindent 12 }}
        {{- end }}
        envFrom:
          - configMapRef:
              name: hummerrisk-config
        env:
          - name: HMR_NACOS_SERVER_ADDR
            value: {{ include "nacos.host" . | quote }}
          - name: LOG_PATH
            value: "/opt/hummerrisk/logs"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 3
          periodSeconds: 5
          timeoutSeconds: 1
        startupProbe:
          httpGet:
            path: /healthz
            port: 80
          failureThreshold: 10
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        ports:
          - containerPort: 9600
        volumeMounts:
          - mountPath: /opt/hummerrisk/report
            name: data-scanner-report
      volumes:
        - name: data-scanner-report
          persistentVolumeClaim:
            claimName: {{ $pvcFullName }}-k8s
{{- end }}