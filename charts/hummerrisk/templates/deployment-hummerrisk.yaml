{{- $pvcFullName := printf "%s-%s" (include "hummerrisk.name" $) "data" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    owner: hummercloud-{{ .Release.Namespace }}
  labels:
    app: hummerrisk
  name: hummerrisk
  namespace: {{ .Release.Namespace | quote }}
spec:
  replicas: {{ .Values.hummerrisk.replicas }}
  selector:
    matchLabels:
      app: hummerrisk
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: hummerrisk
    spec:
      #tolerations:
        #- effect: NoSchedule
        #  key: node-role.kubernetes.io/master
      containers:
      - name: hummer-risk
        image: "{{ .Values.global.imageRegistry }}/hummerrisk/hummerrisk:{{ .Values.hummerrisk.image.tag }}"
        #imagePullPolicy: IfNotPresent
        imagePullPolicy: Always
        {{- if .Values.resources }}
        resources: {{- toYaml .Values.resources | nindent 12 }}
        {{- end }}
        livenessProbe:
          exec:
            command:
              - /bin/sh
              - -ec
              - curl -fsL http://localhost:8088 > /dev/null
          failureThreshold: 10
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - -ec
              - curl -fsL http://localhost:8088 > /dev/null
        volumeMounts:
          - name: config-volume
            mountPath: /opt/hummerrisk/conf
          - name: log-volume
            mountPath: /opt/hummerrisk/log
          - name: file-volume
            mountPath: /opt/hummerrisk/file
          - name: image-volume
            mountPath: /opt/hummerrisk/image
          - name: docker-sock
            mountPath: /var/run/docker.sock
        ports:
          - containerPort: 8088
      volumes:
        - name: config-volume
          configMap:
            name: hummerrisk-config
            optional: true
        - name: log-volume
          persistentVolumeClaim:
            claimName: {{ $pvcFullName }}-logs
        - name: file-volume
          persistentVolumeClaim:
            claimName: {{ $pvcFullName }}-file
        - name: image-volume
          persistentVolumeClaim:
            claimName: {{ $pvcFullName }}-image
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock